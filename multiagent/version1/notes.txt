FOR PROMPTING: MAY NEED AN AGENT THAT REPHRASES THE ORIGINAL PROMPT INTO A VALID TASK FORMAT (SENTENCE STRUCTURE) 
(ex. "my vscode code command is not working" -> "troubleshoot vscode IDE when code command is not working")


Ways to incorporate multi-agent system into this (these are not necessarily mutually exclusive):
- Refining the initial user prompt (the task)
- Taking the initial prompt and questionning the user for more details (knowing what questions to ask)
- After round(s) of asking user to fill in more info -> refining the prompt to put into the onet query and dspy stuff
    - onet: give it a refined mega-prompt for the task 
    - dspy: give it extra info alongside the result from onet query for task (this would probably be more useful)
- After the final dspy stuff is all used



--------------------------------------------------------------------------------------------------------------------------------------------------------



for currently the dspy/dspy_prompt_refiner.py -> assume thats the doc that has all the legit stuff in it



--------------------------------------------------------------------------------------------------------------------------------------------------------



Implementation:
- define agents where each agent does a specific thing
- (if we're just using this to refine prompts I don't see any use cases for RAG or data inference/training, but this could change)
- there's a bunch of tools to both make the agents and do model stuff, but none of that is mandatory as far as I can see